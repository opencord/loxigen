// Copyright 2013, Big Switch Networks, Inc.
//
// LoxiGen is licensed under the Eclipse Public License, version 1.0 (EPL), with
// the following special exception:
//
// LOXI Exception
//
// As a special exception to the terms of the EPL, you may distribute libraries
// generated by LoxiGen (LoxiGen Libraries) under the terms of your choice, provided
// that copyright and licensing notices generated by LoxiGen are not altered or removed
// from the LoxiGen Libraries and the notice provided below is (i) included in
// the LoxiGen Libraries, if distributed in source code form and (ii) included in any
// documentation for the LoxiGen Libraries, if distributed in binary form.
//
// Notice: "Copyright 2013, Big Switch Networks, Inc. This library was generated by the LoxiGen Compiler."
//
// You may not use this file except in compliance with the EPL or LOXI Exception. You may obtain
// a copy of the EPL at:
//
// http://www.eclipse.org/legal/epl-v10.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// EPL for the specific language governing permissions and limitations
// under the EPL.
//
// Also derived from the OpenFlow header files which have these copyrights:
// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation

#version any

enum ofp_ed_prop_class(wire_type=uint16_t) {
    OFPPPC_BASIC = 0,
    OFPPPC_MPLS = 1,
    OFPPPC_GRE = 2,
    OFPPPC_GTP = 3,
    OFPPPC_NSH = 4,
    OFPPPC_EXPERIMENTER = 0xffff,
};

enum ofp_ed_nsh_prop_type(wire_type=uint8_t) {
    OFPPPT_PROP_NSH_NONE = 0,
    OFPPPT_PROP_NSH_MDTYPE = 1,
    OFPPPT_PROP_NSH_TLV = 2,
};

// Hack to avoid having 2 discriminators
struct of_ed_prop_header {
    uint16_t prop_class == ?;
    pad(2);
};

struct of_ed_prop_nsh(length_includes_align=False) : of_ed_prop_header {
    uint16_t prop_class == 4;
    uint8_t type == ?;
    uint8_t len;
};

struct of_ed_prop_nsh_md_type : of_ed_prop_nsh {
    uint16_t prop_class == 4;
    uint8_t type == 1;
    uint8_t len;
    uint8_t md_type;
    pad(3);
};

struct of_ed_prop_nsh_tlv : of_ed_prop_nsh {
    uint16_t prop_class == 4;
    uint8_t type == 2;
    uint8_t len;
    uint16_t tlv_class;
    uint8_t tlv_type;
    uint8_t tlv_len == length(value);
    of_octets_t value;
};

enum ofp_cs_states(wire_type=uint32_t, bitmask=True, complete=True) {
    OFP_CS_NEW = 1,
    OFP_CS_ESTABLISHED = 2,
    OFP_CS_RELATED = 4,
    OFP_CS_REPLY_DIR = 8,
    OFP_CS_INVALID = 16,
    OFP_CS_TRACKED = 32,
    OFP_CS_SRC_NAT = 64,
    OFP_CS_DST_NAT = 128,
};